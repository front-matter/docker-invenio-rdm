# Example of a full InvenioRDM infrastructure stack
#
# Note, this file is not suitable for a production deployment. It is only an
# example of all the infrastructure components needed in a real production
# deployment.
#
# Usage::
#
#   $ docker compose up
#
# The following services are included:
# - Frontend: Nginx (exposed ports: 40 and 443)
# - UI application: UWSGI (not exposed)
# - API application: UWSGI (not exposed)
# - Cache: Redis (exposed port: 6379)
# - DB: (PostgresSQL) (exposed port: 5432)
# - Message queue: RabbitMQ (exposed ports: 5672, 15672)
# - Search platform: OpenSearch (exposed ports: 9200, 9600)
# - OpenSearch Dashboard (view OS indexes) (exposed ports: 5601)

version: "3.8"
services:
  cache:
    image: redis:7
    restart: "unless-stopped"
    read_only: true
    ports:
      - "6379:6379"
  db:
    image: postgres:12.4
    restart: "unless-stopped"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-invenio_rdm}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-invenio_rdm}
      - POSTGRES_DB=${POSTGRES_DB:-invenio_rdm}
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4:7.1
    restart: "unless-stopped"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-info@example.org}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-invenio-rdm}
    ports:
      - "5050:80"
  mq:
    image: rabbitmq:3-management
    restart: "unless-stopped"
    ports:
      - "15672:15672"
      - "5672:5672"
  search:
    image: opensearchproject/opensearch:2.3.0
    restart: "unless-stopped"
    environment:
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - discovery.type=single-node # Disable network discovery
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    mem_limit: 2g
    ports:
      - "9200:9200" # REST API
      - "9600:9600" # Performance Analyzer
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.3.0
    restart: "unless-stopped"
    environment:
      OPENSEARCH_HOSTS: '["http://search:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true # Disable the OpenSearch Dashboards security plugin
    ports:
      - "5601:5601"
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
  frontend:
    image: "ghcr.io/front-matter/invenio-rdm-frontend:${INVENIO_RDM_VERSION:-latest}"
    restart: "unless-stopped"
    volumes:
      - static_data:/opt/invenio/var/instance/static
    depends_on:
      - web-ui
      - web-api
    ports:
      - "80:80"
      - "443:443"
  web-ui:
    image: "ghcr.io/front-matter/invenio-rdm:${INVENIO_RDM_VERSION:-latest}"
    restart: "unless-stopped"
    environment:
      - INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CACHE_TYPE=redis
      - INVENIO_CACHE_REDIS_URL=redis://cache:6379/0
      - INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1
      - INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2
      - INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3
      - INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://${POSTGRES_USER:-invenio_rdm}:${POSTGRES_PASSWORD:-invenio_rdm}@db/${POSTGRES_DB:-invenio_rdm}
      - "INVENIO_SEARCH_HOSTS=['search:9200']"
      - INVENIO_WSGI_PROXIES=2
      - INVENIO_SECRET_KEY=CHANGE_ME
      - INVENIO_THEME_SHOW_FRONTPAGE_INTRO_SECTION=False
    command: ["uwsgi /opt/invenio/var/instance/uwsgi_ui.ini --uid invenio"]
    ports:
      - "5000"
    volumes:
      - static_data:/opt/invenio/var/instance/static
      - ./invenio/uploaded_data:/opt/invenio/var/instance/data
      - ./invenio/archived_data:/opt/invenio/var/instance/archive
  web-api:
    image: "ghcr.io/front-matter/invenio-rdm:${INVENIO_RDM_VERSION:-latest}"
    restart: "unless-stopped"
    environment:
      - INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CACHE_TYPE=redis
      - INVENIO_CACHE_REDIS_URL=redis://cache:6379/0
      - INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1
      - INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2
      - INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3
      - INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://${POSTGRES_USER:-invenio_rdm}:${POSTGRES_PASSWORD:-invenio_rdm}@db/${POSTGRES_DB:-invenio_rdm}
      - "INVENIO_SEARCH_HOSTS=['search:9200']"
      - INVENIO_WSGI_PROXIES=2
      - INVENIO_SECRET_KEY=CHANGE_ME
    command: ["uwsgi /opt/invenio/var/instance/uwsgi_rest.ini --uid invenio"]
    ports:
      - "5000"
    volumes:
      - ./invenio/app_data:/opt/invenio/var/instance/app_data
      - ./invenio/uploaded_data:/opt/invenio/var/instance/data
      - ./invenio/archived_data:/opt/invenio/var/instance/archive
  worker:
    image: "ghcr.io/front-matter/invenio-rdm:${INVENIO_RDM_VERSION:-latest}"
    restart: "unless-stopped"
    environment:
      - INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CACHE_TYPE=redis
      - INVENIO_CACHE_REDIS_URL=redis://cache:6379/0
      - INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1
      - INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2
      - INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3
      - INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://${POSTGRES_USER:-invenio_rdm}:${POSTGRES_PASSWORD:-invenio_rdm}@db/${POSTGRES_DB:-invenio_rdm}
      - "INVENIO_SEARCH_HOSTS=['search:9200']"
      - INVENIO_WSGI_PROXIES=2
      - INVENIO_SECRET_KEY=CHANGE_ME
    command: ["celery -A invenio_app.celery worker --beat --loglevel=WARNING"]
    volumes:
      - ./invenio/uploaded_data:/opt/invenio/var/instance/data
    depends_on:
      search:
        condition: service_started
      cache:
        condition: service_started
      db:
        condition: service_started
      mq:
        condition: service_started
  web-api-init:
    image: "ghcr.io/front-matter/invenio-rdm:${INVENIO_RDM_VERSION:-latest}"
    restart: "no"
    environment:
      - INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/
      - INVENIO_CACHE_TYPE=redis
      - INVENIO_CACHE_REDIS_URL=redis://cache:6379/0
      - INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1
      - INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2
      - INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3
      - INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://${POSTGRES_USER:-invenio_rdm}:${POSTGRES_PASSWORD:-invenio_rdm}@db/${POSTGRES_DB:-invenio_rdm}
      - "INVENIO_SEARCH_HOSTS=['search:9200']"
      - INVENIO_WSGI_PROXIES=2
      - INVENIO_SECRET_KEY=CHANGE_ME
    entrypoint: [ "bash", "init.sh"] 
    depends_on:
      search:
        condition: service_started
      cache:
        condition: service_started
      db:
        condition: service_started
      mq:
        condition: service_started
    volumes:
      - ./invenio/init.sh:/opt/invenio/src/init.sh
volumes:
  static_data:
  uploaded_data:
  archived_data:
